// <auto-generated />
using System;
using CreditApplicationMVCProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreditApplicationMVCProject.Migrations
{
    [DbContext(typeof(CreditapplicationContext))]
    partial class CreditapplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditApplication", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationID"));

                    b.Property<DateTime?>("ApplicationDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PurposeID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("RequestedAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("StatusID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ApplicationID")
                        .HasName("PK__CreditAp__C93A4F794DE3C87E");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PurposeID");

                    b.HasIndex("StatusID");

                    b.ToTable("CreditApplication", (string)null);
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditApplicationStatusMaster", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("StatusID")
                        .HasName("PK__CreditAp__C0F28966696C6703");

                    b.ToTable("CreditApplicationStatusMaster", (string)null);
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditDecision", b =>
                {
                    b.Property<int>("DecisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DecisionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DecisionId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DecisionDate")
                        .HasColumnType("date");

                    b.Property<string>("DecisionDetails")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DecisionId")
                        .HasName("PK__CreditDe__C0F289660890CF43");

                    b.HasIndex("ApplicationId");

                    b.ToTable("CreditDecision", (string)null);
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8E26857BA");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.EmploymentStatusMaster", b =>
                {
                    b.Property<int>("EmploymentStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmploymentStatusID"));

                    b.Property<string>("EmploymentStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmploymentStatusID");

                    b.ToTable("EmploymentStatusMaster");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.FinancialInformation", b =>
                {
                    b.Property<int>("FinancialInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FinancialInformationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialInformationId"));

                    b.Property<int?>("CreditScore")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmploymentStatusID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("MonthlyIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("FinancialInformationId")
                        .HasName("PK__Financia__713EF851616ACAC8");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmploymentStatusID");

                    b.ToTable("FinancialInformation", (string)null);
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.PurposeMaster", b =>
                {
                    b.Property<int>("PurposeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PurposeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurposeID"));

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PurposeID")
                        .HasName("PK__PurposeM__ED352978E14F1057");

                    b.ToTable("PurposeMaster", (string)null);
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditApplication", b =>
                {
                    b.HasOne("CreditApplicationMVCProject.Models.Customer", "Customer")
                        .WithMany("CreditApplications")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CreditApp__Custo__4BAC3F29");

                    b.HasOne("CreditApplicationMVCProject.Models.PurposeMaster", "PurposeMasters")
                        .WithMany("CreditApplications")
                        .HasForeignKey("PurposeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CreditApp__Purpo__4F7CD00D");

                    b.HasOne("CreditApplicationMVCProject.Models.CreditApplicationStatusMaster", "CreditApplicationStatusMasters")
                        .WithMany("CreditApplications")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CreditApp__Statu__4E88AB92");

                    b.Navigation("CreditApplicationStatusMasters");

                    b.Navigation("Customer");

                    b.Navigation("PurposeMasters");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditDecision", b =>
                {
                    b.HasOne("CreditApplicationMVCProject.Models.CreditApplication", "Application")
                        .WithMany("CreditDecisions")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__CreditDec__Appli__5165187F");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.FinancialInformation", b =>
                {
                    b.HasOne("CreditApplicationMVCProject.Models.Customer", "Customer")
                        .WithMany("FinancialInformations")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Financial__Custo__4E88ABD4");

                    b.HasOne("CreditApplicationMVCProject.Models.EmploymentStatusMaster", "EmploymentStatusMasters")
                        .WithMany("financialInformations")
                        .HasForeignKey("EmploymentStatusID")
                        .HasConstraintName("FK__Financial__Emplo__4D94879B");

                    b.Navigation("Customer");

                    b.Navigation("EmploymentStatusMasters");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditApplication", b =>
                {
                    b.Navigation("CreditDecisions");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.CreditApplicationStatusMaster", b =>
                {
                    b.Navigation("CreditApplications");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.Customer", b =>
                {
                    b.Navigation("CreditApplications");

                    b.Navigation("FinancialInformations");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.EmploymentStatusMaster", b =>
                {
                    b.Navigation("financialInformations");
                });

            modelBuilder.Entity("CreditApplicationMVCProject.Models.PurposeMaster", b =>
                {
                    b.Navigation("CreditApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
